name: linting, testing, building
on: 
  push:
    branches: ['master', 'develop']
  pull_request: 
    branches: ['master', 'develop']
jobs:
  Pipeline-Production-Project:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with: 
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm install
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: linting typescript
        run: npm run lint
        if: always()
      - name: linting scss
        run: npm run lint-scss
        if: always()
      - name: unit testing
        run: npm run unit
        if: always()
      - name: build storybook
        run: npm run build-storybook
        if: always()
      - name: screenshot testing
        run: npm run loki:ci

# name: linting, testing, building
# on:
#   push:
#     branches: [ 'master', 'develop' ]
#   pull_request:
#     branches: [ 'master', 'develop' ]
# permissions:
#   contents: write
#   pages: write
#   id-token: write
# concurrency:
#   group: "pages"
#   cancel-in-progress: true
# jobs:
#   build-and-ui-testing:
#     runs-on: ubuntu-latest
#     concurrency: ci-${{ github.ref }}
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     strategy:
#       matrix:
#         node-version: [ 17.x ]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm ci --force
#       - name: build production project
#         run: npm run build:prod
#         if: always()
#       - name: build storybook
#         run: npm run build-storybook
#         if: always()
#       - name: screenshot testing
#         run: npm run loki:ci
#         if: always()
#       - name: Generate HTML report
#         run: npm run test:report
#         if: always()
#       - name: Setup Pages
#         uses: actions/configure-pages@v2
#         if: always()
#       - name: Upload artifact
# <<<<<<< HEAD
#         uses: actions/upload-pages-artifact@v4
# =======
#         uses: actions/upload-pages-artifact@v1
# >>>>>>> 3c28258370bc67f905b2d11c1329d205b40ac065
#         if: always()
#         with:
#           path: '.loki'
#       - name: Deploy to GitHub Pages
#         id: deployment
#         if: always()
#         uses: actions/deploy-pages@v1

#   checks:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [ 17.x ]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm ci --force
#       - name: linting typescript
#         run: npm run lint
#         if: always()
#       - name: linting css
#         run: npm run lint-scss
#       - name: unit testing
#         if: always()
#         run: npm run unit
